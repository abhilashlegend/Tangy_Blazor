@page "/learnblazor/blindprop"

<h2 class="text-success">Individual Product</h2>
<div class="row">
    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Playground</h3><hr />
        <div>
            Active: <input type="checkbox" @bind-value="@Product.IsActive" checked="@Product.IsActive" />
        </div>
        <div>
            Price: <input type="number" @bind-value="@Product.Price" @bind-value:event="oninput" />
        </div>
        <div>
        Product Properties:
        <select @bind="@selectedProperty">
            @foreach (var prop in Product.ProductProperties)
            {
                <option value="@prop.Key">@prop.Key</option>
            }
        </select>
        </div>
    </div>
    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Summary</h3><hr />
        <div> Name : @Product.Name</div>
        
        <div>Price: @Product.Price</div>
        
        <div>Property Selected: @selectedProperty</div>
        
        @if (!String.IsNullOrWhiteSpace(selectedProperty))
        {
            <div>Property Value: @Product.ProductProperties.FirstOrDefault(u => u.Key == selectedProperty).Value</div>
        }

        <div>IsActive : @Product.IsActive</div>
        
        <div>This product is : @(Product.IsActive ? "Active" : "InActive")</div>
        
    </div> <!-- End of column -->
</div> <!-- End of row -->

<h2 class="text-success mt-3">Product Table</h2>
<div class="row">
    <div class="col-12">
        <table class="table table-striped">
  <thead>
    <tr>
      <th scope="col">Product</th>
      <th scope="col">Price</th>
      <th scope="col">Is Active</th>
    </tr>
  </thead>
  <tbody>
                @foreach(var product in Products)
                {
                    <tr>
                        <td><input type="text" @bind-value="@product.Name" @bind-value:event="oninput" /></td>
                        <td><input type="text" @bind-value="@product.Price" @bind-value:event="oninput" /></td>
                        <td><input type="checkbox" @bind-value="@product.IsActive" checked="@product.IsActive" /></td>
                    </tr>
                }
            </tbody>
  </table>
    </div>
</div> <!-- End of row -->

<div class="row">
    <div class="col-12">
        <h3>Product Summary</h3>
        @foreach(var product in Products)
        {
            <p>@product.Name [@product.Price] is @(@product.IsActive?"Active":"Inactive")</p>
        }
        
    </div>
</div>



@code {
    private string selectedProperty = "";

    Demo_Product Product = new()
        {
            Id = 1,
            Name = "Rose Candle",
            Price = 10.23,
            IsActive = true,
            ProductProperties = new List<Tangy_Models.LearnBlazorModels.Demo_ProductProp>()
            {
                new Demo_ProductProp { Id = 1, Key = "Color", Value = "Black" },
                new Demo_ProductProp { Id = 2, Key = "Flavor", Value = "Rose Jasmine" },
                new Demo_ProductProp { Id = 3, Key = "Size", Value = "20oz" }
            }
        };

    List<Demo_Product> Products = new();

    protected override void OnInitialized()
    {
        Products.Add(new()
            {
                Id = 1,
                Name = "Midnight Blaze",
                IsActive = false,
                Price = 13.50,
                ProductProperties = new()
            {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Rose" },
                new Demo_ProductProp { Id = 2, Key = "Size", Value = "20oz" },
                new Demo_ProductProp { Id = 3, Key = "Color", Value = "Purple" }
            }
        });

        Products.Add(new()
            {
                Id = 2,
                Name = "Blossom Lilly",
                IsActive = true,
                Price = 18.00,
                ProductProperties = new()
                {
                    new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Lilly" },
                    new Demo_ProductProp { Id = 2, Key = "Size", Value = "18oz" },
                    new Demo_ProductProp { Id = 3, Key = "Color", Value = "white" }
                }
            });
    }
}
